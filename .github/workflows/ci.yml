name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install github.com/FiloSottile/mkcert
      run: brew install mkcert
    - uses: actions/checkout@v3
    - name: Create local CA and certificate
      run: |
        mkdir -p .etc_rabbitmq
        CAROOT="$(pwd)/.etc_rabbitmq" $(brew --prefix)/bin/mkcert -install
        $(brew --prefix)/bin/mkcert -key-file ./.etc_rabbitmq/localhost-key.pem -cert-file ./.etc_rabbitmq/localhost.pem localhost
        chmod +r ./.etc_rabbitmq/localhost-key.pem
    - name: Create RabbitMQ config
      run: |
        tee ./.etc_rabbitmq/rabbitmq.conf <<'EOF'
        loopback_users = none
        listeners.ssl.default  = 5671
        ssl_options.cacertfile = /etc/rabbitmq/rootCA.pem
        ssl_options.certfile   = /etc/rabbitmq/localhost.pem
        ssl_options.keyfile    = /etc/rabbitmq/localhost-key.pem
        EOF
    - name: Start Docker Compose
      run: docker compose up -d
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npm test
      env:
        AMQPS_URL: amqps://localhost?insecure
    - run: npm run lint

  test-browser:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 16.x

    steps:
    - uses: actions/checkout@v3
    - name: Create RabbitMQ config
      run: |
        mkdir -p .etc_rabbitmq
        tee ./.etc_rabbitmq/rabbitmq.conf <<'EOF'
        loopback_users = none
        EOF
    - name: Start Docker Compose
      run: docker compose up -d
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: npm install
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - run: npx playwright install --with-deps chromium
    - run: npm run test-browser -- run --browser.headless
