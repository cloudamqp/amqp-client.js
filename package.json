{
  "name": "@cloudamqp/amqp-client",
  "version": "3.0.0",
  "description": "AMQP 0-9-1 client, both for browsers (WebSocket) and node (TCP Socket)",
  "type": "module",
  "main": "lib/cjs/index.js",
  "types": "types/index.d.ts",
  "browser": {
    "AMQPClient": false,
    "buffer": false,
    "net": false,
    "tls": false
  },
  "exports": {
    "types": "./types/index.d.ts",
    "import": "./lib/mjs/index.js",
    "require": "./lib/cjs/index.js"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "scripts": {
    "docs": "typedoc src/index.ts",
    "lint": "eslint src",
    "test": "vitest run --coverage",
    "test-browser": "vitest --config ./vitest.config.browser.ts",
    "prebuild": "rm -rf dist lib types",
    "build": "tsc && tsc --module commonjs --outDir lib/cjs && tsc --emitDeclarationOnly --removeComments false && rollup -c",
    "postbuild": "echo '{\"type\": \"commonjs\"}' > lib/cjs/package.json",
    "prepare": "npm run build",
    "preversion": "npm test",
    "version": "sed -i'' \"s/VERSION = .*/VERSION = '$npm_package_version'/\" src/amqp-base-client.ts && git add src/amqp-base-client.ts"
  },
  "files": [
    "src/",
    "lib/",
    "types/",
    "dist/"
  ],
  "repository": "github:cloudamqp/amqp-client.js",
  "keywords": [
    "amqp",
    "rabbitmq",
    "amqplib"
  ],
  "author": "CloudAMQP <contact@cloudamqp.com>",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/cloudamqp/amqp-client.js/issues"
  },
  "homepage": "https://github.com/cloudamqp/amqp-client.js#readme",
  "devDependencies": {
    "@types/node": "^16.18.37",
    "@typescript-eslint/eslint-plugin": "^5.8.0",
    "@typescript-eslint/parser": "^5.8.0",
    "@vitest/browser": "^0.33.0",
    "@vitest/coverage-v8": "^0.33.0",
    "eslint": "^8.5.0",
    "playwright": "^1.36.1",
    "rollup": "^2.39.1",
    "rollup-plugin-sourcemaps": "^0.6.3",
    "ts-node": "^10.8.0",
    "typedoc": "^0.22.10",
    "typescript": "^4.6.4",
    "vitest": "^0.33.0"
  },
  "ava": {
    "extensions": {
      "ts": "module"
    },
    "nonSemVerExperiments": {
      "configurableModuleFormat": true
    },
    "nodeArguments": [
      "--loader=ts-node/esm"
    ]
  }
}
